package test

import (
	"bytes"
	"io"
	"net/http"
	"testing"

	"github.com/goccy/go-json"
)

// Generated by curl-to-Go: https://mholt.github.io/curl-to-go

// curl 'https://rapidshipltl.mycarriertms.com/MyCarrierAPI//api/Shipment/GetCustomerShipments' \
//   -H 'authority: rapidshipltl.mycarriertms.com' \
//   -H 'accept: application/json' \
//   -H 'accept-language: en-US,en;q=0.9' \
//   -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6ImthbmRlbHN1cmVuQGdtYWlsLmNvbSIsInJvbGUiOlsiTXlDYXJyaWVyX1NoaXAiLCJNeUNhcnJpZXJfTWFuYWdlQ29tcGFueSIsIkNhbkFjY2Vzc0hvbWVQYWdlIiwiQ2FuVXNlUXVvdGVQYWdlIiwiQ2FuVXNlU2hpcG1lbnRMaXN0UGFnZSIsIkNhblVzZUFkZHJlc3NCb29rUGFnZSIsIkNhblVzZUxvY2F0aW9uUGFnZSIsIkNhblVzZVByb2R1Y3RQYWdlIiwiQ2FuVXNlQmlsbGluZ0FkZHJlc3NQYWdlIiwiQ2FuVXNlQ2FsZW5kYXJIb21lUGFnZSIsIkNhblVzZVByb2ZpbGVDb25maWd1cmF0aW9uUGFnZSIsIkNhblVzZUN1c3RvbWVyVXNlcnNQYWdlIiwiQ2FuVXNlQ29udGFjdFN1cHBvcnQiLCJDYW5Vc2VTZWxlY3RMb2NhdGlvbkNhcnJpZXJQYWdlIiwiQ2FuVXNlUGFzdFF1b3RlIiwiQ2FuVXNlQnVsa1VwbG9hZEFkZHJlc3NQYWdlIiwiQ2FuVXNlUXVpY2tCb2xQYWdlIiwiQ2FuVXNlQnVsa0VkaXRBZGRyZXNzUGFnZSIsIkNhblVzZVRydWNrbG9hZEFwaSIsIkNhblVzZUN1c3RvbWVyQ2FycmllclJlc291cmNlc1BhZ2UiLCJDYW5Vc2VCdWxrVXBsb2FkT3JkZXJQYWdlIiwiQ2FuVXNlSW52b2ljZVBhZ2UiLCJDdXN0b21lckFkbWluaXN0cmF0b3IiXSwibmJmIjoxNjU2NDY1MzYzLCJleHAiOjE2NTY0Njg5NjMsImlhdCI6MTY1NjQ2NTM2M30.fPP_PpTw04w9_ZYz5XgOd7_TWyV5T9_ahNtSJLXMc0c' \
//   -H 'cache-control: no-cache' \
//   -H 'content-type: application/json' \
//   -H 'cookie: ai_user=Oi4VWkdRdayuaM8bsUTtLr|2022-05-12T16:52:15.909Z; _gcl_au=1.1.611107233.1655681811; ASPSESSIONIDSGBBABTD=NPLCKCCDJJODINFPGLADMIMB; ASPSESSIONIDSGBDSDSS=FABDOGMAPFILKLMJLDGKJLGL; ASPSESSIONIDQGBCCATD=JNHDFMLAOENHAOHFCOCFEGAB; _gid=GA1.2.419302534.1656369639; ASPSESSIONIDCERTDBQA=ENICOGMAFEILPOLEFDLHJPMD; ASPSESSIONIDQEBBACTD=BMCCANBBMNJOPJAPPGPCNLKD; ASPSESSIONIDCEDSACSB=LIPOJPGBBDAKNGPMOLIDLPJI; hubspotutk=e783a15325a2b1d4a32e6caf15455034; __hssrc=1; intercom-id-c9oc6fab=8476f2dc-fe2a-4ca5-ad9a-2e49fe216bba; ASPSESSIONIDSGCDDDQD=AHBDLLIBNMBGNJNIOMNBDMHC; ASPSESSIONIDQEBCBBTC=MOBILFMBMILPKCFKNBJFNMID; ASPSESSIONIDCEAQABQD=MEFJLFMBGGFJIJIHOCBHELJB; ASPSESSIONIDCWSDADCC=PJBILFMBHMMPMMEAOALBFNBB; _ga=GA1.1.2101301807.1655681811; __hstc=192659957.e783a15325a2b1d4a32e6caf15455034.1656434261965.1656461762245.1656465852461.5; __hssc=192659957.1.1656465852461; ai_session=hPZ+Oflk5bbeE8+NVqz5d4|1656461759986|1656465947111; intercom-session-c9oc6fab=Rm8vSEtRbHltVTRGTjRIU3U3bDU1L3NCbmVudmt0V0JNSGxsYm1qYnlFeFpyVjlEMGZvRkhqcld3dG9wbGhGVy0tYmFmL2VkVmtuRE1TS1J3N2EyUks2QT09--766a8ca26ede426a01aca08ede1e99bc148aa50c; _ga_7EFE8PPXQV=GS1.1.1656465286.39.1.1656465958.0' \
//   -H 'dnt: 1' \
//   -H 'environment: PROD' \
//   -H 'notificationresponseurl: https://inf-prod-signalrhandler.azurewebsites.net/' \
//   -H 'orderprocessingurl: https://app-orderprocessing-prod-bulkapi.azurewebsites.net/' \
//   -H 'origin: https://rapidshipltl.mycarriertms.com' \
//   -H 'pragma: no-cache' \
//   -H 'referer: https://rapidshipltl.mycarriertms.com/customers/shipments' \
//   -H 'request-context: appId=cid-v1:cf6939be-b751-46bb-b434-d14afeb50826' \
//   -H 'request-id: |9e89054158f84f5995f5aa8d8704c008.859c9192573349dd' \
//   -H 'sec-ch-ua: " Not A;Brand";v="99", "Chromium";v="102", "Google Chrome";v="102"' \
//   -H 'sec-ch-ua-mobile: ?0' \
//   -H 'sec-ch-ua-platform: "macOS"' \
//   -H 'sec-fetch-dest: empty' \
//   -H 'sec-fetch-mode: cors' \
//   -H 'sec-fetch-site: same-origin' \
//   -H 'timezone: 420' \
//   -H 'traceparent: 00-9e89054158f84f5995f5aa8d8704c008-859c9192573349dd-01' \
//   -H 'truckloadfunctionurl: https://app-truckload-prod-api.azurewebsites.net/' \
//   -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36' \
//   --data-raw '{"gridFilter":{"sortOrder":true,"sortField":"PickupDate","take":20,"skip":0,"page":null},"searchShipment":{"bolNumber":null,"proNumber":null,"poNumber":null,"pickupDate":null,"shipperName":null,"originAddress":null,"consigneeName":null,"destinationAddress":null,"carrierName":null,"startDate":"Invalid date","endDate":"Invalid date","selectedDateFilter":2},"statusShipment":{"bookedStatus":true,"pickupStatus":true,"inTransitStatus":true,"outForDeliveryStatus":true,"deliveredStatus":true}}' \
//   --compressed

type ShipmentSearchResponse struct {
	Result struct {
		TotalCount int `json:"totalCount"`
		SourceList []struct {
			ShipmentID                 int         `json:"shipmentId"`
			ExceptionText              interface{} `json:"exceptionText"`
			IsShipmentException        bool        `json:"isShipmentException"`
			ShipmentStatusNumber       int         `json:"shipmentStatusNumber"`
			CustomerBOLNumber          string      `json:"customerBOLNumber"`
			CarrierPRONumber           string      `json:"carrierPRONumber"`
			PoNumber                   string      `json:"poNumber"`
			ActualPickupDate           string      `json:"actualPickupDate"`
			ShipperName                string      `json:"shipperName"`
			OriginAddress              string      `json:"originAddress"`
			ConsigneeName              string      `json:"consigneeName"`
			DestinationAddress         string      `json:"destinationAddress"`
			CarrierName                string      `json:"carrierName"`
			HasPriceDetails            bool        `json:"hasPriceDetails"`
			TotalCost                  float64     `json:"totalCost"`
			SecurityKey                string      `json:"securityKey"`
			HasShipmentTrackingHistory bool        `json:"hasShipmentTrackingHistory"`
			ServiceType                int         `json:"serviceType"`
			IsUnspecifiedTracking      bool        `json:"isUnspecifiedTracking"`
			HasITMContract             bool        `json:"hasITMContract"`
			CarrierID                  int         `json:"carrierId"`
			AvailableDocuments         struct {
				Pod   bool `json:"pod"`
				Bol   bool `json:"bol"`
				Other bool `json:"other"`
			} `json:"availableDocuments"`
		} `json:"sourceList"`
	} `json:"result"`
}
type Payload struct {
	GridFilter     GridFilter     `json:"gridFilter"`
	SearchShipment SearchShipment `json:"searchShipment"`
	StatusShipment StatusShipment `json:"statusShipment"`
}
type GridFilter struct {
	SortOrder bool        `json:"sortOrder"`
	SortField string      `json:"sortField"`
	Take      int         `json:"take"`
	Skip      int         `json:"skip"`
	Page      interface{} `json:"page"`
}
type SearchShipment struct {
	BolNumber          interface{} `json:"bolNumber"`
	ProNumber          interface{} `json:"proNumber"`
	PoNumber           interface{} `json:"poNumber"`
	PickupDate         interface{} `json:"pickupDate"`
	ShipperName        interface{} `json:"shipperName"`
	OriginAddress      interface{} `json:"originAddress"`
	ConsigneeName      interface{} `json:"consigneeName"`
	DestinationAddress interface{} `json:"destinationAddress"`
	CarrierName        interface{} `json:"carrierName"`
	StartDate          string      `json:"startDate"`
	EndDate            string      `json:"endDate"`
	SelectedDateFilter int         `json:"selectedDateFilter"`
}
type StatusShipment struct {
	BookedStatus         bool `json:"bookedStatus"`
	PickupStatus         bool `json:"pickupStatus"`
	InTransitStatus      bool `json:"inTransitStatus"`
	OutForDeliveryStatus bool `json:"outForDeliveryStatus"`
	DeliveredStatus      bool `json:"deliveredStatus"`
}

func Test_GetCustomerShipment(t *testing.T) {
	data := Payload{
		GridFilter: GridFilter{
			SortOrder: true,
			SortField: "PickupDate",
			Take:      20,
			Skip:      0,
		},
		SearchShipment: SearchShipment{
			StartDate:          "Invalid date",
			EndDate:            "Invalid date",
			SelectedDateFilter: 2,
		},
		StatusShipment: StatusShipment{
			BookedStatus:         true,
			PickupStatus:         true,
			InTransitStatus:      true,
			OutForDeliveryStatus: true,
			DeliveredStatus:      true,
		},
	}
	payloadBytes, err := json.Marshal(data)
	if err != nil {
		// handle err
	}
	body := bytes.NewReader(payloadBytes)

	req, err := http.NewRequest("POST", "https://rapidshipltl.mycarriertms.com/MyCarrierAPI//api/Shipment/GetCustomerShipments", body)
	if err != nil {
		// handle err
	}
	req.Header.Set("Authority", "rapidshipltl.mycarriertms.com")
	req.Header.Set("Accept", "application/json")
	req.Header.Set("Accept-Language", "en-US,en;q=0.9")
	req.Header.Set("Authorization", "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6ImthbmRlbHN1cmVuQGdtYWlsLmNvbSIsInJvbGUiOlsiTXlDYXJyaWVyX1NoaXAiLCJNeUNhcnJpZXJfTWFuYWdlQ29tcGFueSIsIkNhbkFjY2Vzc0hvbWVQYWdlIiwiQ2FuVXNlUXVvdGVQYWdlIiwiQ2FuVXNlU2hpcG1lbnRMaXN0UGFnZSIsIkNhblVzZUFkZHJlc3NCb29rUGFnZSIsIkNhblVzZUxvY2F0aW9uUGFnZSIsIkNhblVzZVByb2R1Y3RQYWdlIiwiQ2FuVXNlQmlsbGluZ0FkZHJlc3NQYWdlIiwiQ2FuVXNlQ2FsZW5kYXJIb21lUGFnZSIsIkNhblVzZVByb2ZpbGVDb25maWd1cmF0aW9uUGFnZSIsIkNhblVzZUN1c3RvbWVyVXNlcnNQYWdlIiwiQ2FuVXNlQ29udGFjdFN1cHBvcnQiLCJDYW5Vc2VTZWxlY3RMb2NhdGlvbkNhcnJpZXJQYWdlIiwiQ2FuVXNlUGFzdFF1b3RlIiwiQ2FuVXNlQnVsa1VwbG9hZEFkZHJlc3NQYWdlIiwiQ2FuVXNlUXVpY2tCb2xQYWdlIiwiQ2FuVXNlQnVsa0VkaXRBZGRyZXNzUGFnZSIsIkNhblVzZVRydWNrbG9hZEFwaSIsIkNhblVzZUN1c3RvbWVyQ2FycmllclJlc291cmNlc1BhZ2UiLCJDYW5Vc2VCdWxrVXBsb2FkT3JkZXJQYWdlIiwiQ2FuVXNlSW52b2ljZVBhZ2UiLCJDdXN0b21lckFkbWluaXN0cmF0b3IiXSwibmJmIjoxNjU2NDY1MzYzLCJleHAiOjE2NTY0Njg5NjMsImlhdCI6MTY1NjQ2NTM2M30.fPP_PpTw04w9_ZYz5XgOd7_TWyV5T9_ahNtSJLXMc0c")
	req.Header.Set("Cache-Control", "no-cache")
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("Cookie", "ai_user=Oi4VWkdRdayuaM8bsUTtLr|2022-05-12T16:52:15.909Z; _gcl_au=1.1.611107233.1655681811; ASPSESSIONIDSGBBABTD=NPLCKCCDJJODINFPGLADMIMB; ASPSESSIONIDSGBDSDSS=FABDOGMAPFILKLMJLDGKJLGL; ASPSESSIONIDQGBCCATD=JNHDFMLAOENHAOHFCOCFEGAB; _gid=GA1.2.419302534.1656369639; ASPSESSIONIDCERTDBQA=ENICOGMAFEILPOLEFDLHJPMD; ASPSESSIONIDQEBBACTD=BMCCANBBMNJOPJAPPGPCNLKD; ASPSESSIONIDCEDSACSB=LIPOJPGBBDAKNGPMOLIDLPJI; hubspotutk=e783a15325a2b1d4a32e6caf15455034; __hssrc=1; intercom-id-c9oc6fab=8476f2dc-fe2a-4ca5-ad9a-2e49fe216bba; ASPSESSIONIDSGCDDDQD=AHBDLLIBNMBGNJNIOMNBDMHC; ASPSESSIONIDQEBCBBTC=MOBILFMBMILPKCFKNBJFNMID; ASPSESSIONIDCEAQABQD=MEFJLFMBGGFJIJIHOCBHELJB; ASPSESSIONIDCWSDADCC=PJBILFMBHMMPMMEAOALBFNBB; _ga=GA1.1.2101301807.1655681811; __hstc=192659957.e783a15325a2b1d4a32e6caf15455034.1656434261965.1656461762245.1656465852461.5; __hssc=192659957.1.1656465852461; ai_session=hPZ+Oflk5bbeE8+NVqz5d4|1656461759986|1656465947111; intercom-session-c9oc6fab=Rm8vSEtRbHltVTRGTjRIU3U3bDU1L3NCbmVudmt0V0JNSGxsYm1qYnlFeFpyVjlEMGZvRkhqcld3dG9wbGhGVy0tYmFmL2VkVmtuRE1TS1J3N2EyUks2QT09--766a8ca26ede426a01aca08ede1e99bc148aa50c; _ga_7EFE8PPXQV=GS1.1.1656465286.39.1.1656465958.0")
	req.Header.Set("Dnt", "1")
	req.Header.Set("Environment", "PROD")
	req.Header.Set("Notificationresponseurl", "https://inf-prod-signalrhandler.azurewebsites.net/")
	req.Header.Set("Orderprocessingurl", "https://app-orderprocessing-prod-bulkapi.azurewebsites.net/")
	req.Header.Set("Origin", "https://rapidshipltl.mycarriertms.com")
	req.Header.Set("Pragma", "no-cache")
	req.Header.Set("Referer", "https://rapidshipltl.mycarriertms.com/customers/shipments")
	req.Header.Set("Request-Context", "appId=cid-v1:cf6939be-b751-46bb-b434-d14afeb50826")
	req.Header.Set("Request-Id", "|9e89054158f84f5995f5aa8d8704c008.859c9192573349dd")
	req.Header.Set("Sec-Ch-Ua", "\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"102\", \"Google Chrome\";v=\"102\"")
	req.Header.Set("Sec-Ch-Ua-Mobile", "?0")
	req.Header.Set("Sec-Ch-Ua-Platform", "\"macOS\"")
	req.Header.Set("Sec-Fetch-Dest", "empty")
	req.Header.Set("Sec-Fetch-Mode", "cors")
	req.Header.Set("Sec-Fetch-Site", "same-origin")
	req.Header.Set("Timezone", "420")
	req.Header.Set("Traceparent", "00-9e89054158f84f5995f5aa8d8704c008-859c9192573349dd-01")
	req.Header.Set("Truckloadfunctionurl", "https://app-truckload-prod-api.azurewebsites.net/")
	req.Header.Set("User-Agent", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36")

	resp, err := http.DefaultClient.Do(req)
	if err != nil {
		// handle err
	}
	res := &ShipmentSearchResponse{}
	bodyBytes, err := io.ReadAll(resp.Body)
	err = json.Unmarshal(bodyBytes, res)

	defer resp.Body.Close()
}
